{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","a","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","file","imagePreviewUrl","createProject","history","push","handleImageChange","reader","FileReader","files","onloadend","result","readAsDataURL","fileUploadHandler","console","log","$imagePreview","src","name","authorId","add","Date","res","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47acc4ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>Upload</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/signup'>Signup</NavLink></li>\r\n           <li><NavLink to='/Signin'>Login</NavLink></li>\r\n          \r\n       </ul>\r\n\r\n    )\r\n}\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Uma's Boutique</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\nreturn(\r\n    <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card z-depth-0 project-summary\">\r\n          <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title} </span>\r\n            <p>posted by {project.authorFirstName} {project.authorLastName}</p>\r\n<p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n)\r\n}\r\n\r\n\r\nexport default ProjectSummary","import React from \"react\";\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return(\r\n          <Link to ={'/project/' + project.id} key={project.id}>\r\n          <ProjectSummary project={project}  />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectList;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to ='/signIn' />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to ='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (a) => {\r\n  return{\r\n    authError: a.auth.authError,\r\n    auth: a.firebase.auth\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    file: '',\r\n    imagePreviewUrl: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleImageChange = e => {\r\n    \r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n  fileUploadHandler = e => {\r\n \r\n    console.log(\"handle uploading-\", this.state.file);\r\n  };\r\n  render() {\r\n    let { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n      $imagePreview = <img src={imagePreviewUrl} />;\r\n    } \r\n\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signIn\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Upload a New Photo</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Name</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n            <label htmlFor=\"content\">Description</label>\r\n          </div>\r\n          <div className=\"previewComponent\">\r\n            <input type=\"file\" name=\"file\" onChange={this.handleImageChange} />\r\n            <button onClick={this.fileUploadHandler}>Upload</button>\r\n            <div className=\"imgPreview\">{$imagePreview}</div>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return(dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()    \r\n        }).then ((res) => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n  \r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n          \n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  \r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n  \r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n  \r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;","const initState = {\r\n  \r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"created project error\", action.err);\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCujqwD2xFZHQ5-dc8MXbsWJbbOhFfKHVA\",\r\n  authDomain: \"marioplan-b30d3.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-b30d3.firebaseio.com\",\r\n  projectId: \"marioplan-b30d3\",\r\n  storageBucket: \"marioplan-b30d3.appspot.com\",\r\n  messagingSenderId: \"670212499955\",\r\n  appId: \"1:670212499955:web:529bc8694af41007d64a86\",\r\n  measurementId: \"G-LRVHVEPGN4\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({});\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n    )\n    );\n\n    store.firebaseAuthIsReady.then(() => {\n        ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n        serviceWorker.unregister();\n    })\n  \n\n    \n    \n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}